{"version":3,"sources":["services/local-storage.service.js","context/PlayersContextProvider.js","services/request.service.js","services/dota-api.service.js","hooks/usePlayersOrCache.js","components/PlayerTile.js","components/ChoosePlayers.js","components/MatchTile.js","hooks/useFetchRecentGames.js","components/PlayerWithGames.js","components/ViewPlayers.js","App.js","index.js"],"names":["get","key","localValue","localStorage","getItem","success","data","JSON","parse","e","console","error","message","set","val","setItem","stringify","PlayersContext","React","PlayersContextProvider","_ref","children","_React$useState","_React$useState2","Object","slicedToArray","players","setPlayers","addPlayer","newPlayer","concat","toConsumableArray","removePlayer","id","filter","player","cachedPlayers","LocalStorage","undefined","react","Provider","value","request","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","json","wrap","_context","prev","next","fetch","sent","abrupt","t0","stop","_x","apply","this","arguments","getAllProPlayers","dotaApiUrl","getPlayersRecentGames","_ref2","_callee2","requestUrl","filteredMatches","_context2","map","match","match_id","hero","hero_id","heroes","name","date","start_time","kills","deaths","assists","radiant_win","usePlayersOrCache","_useState","useState","_useState2","topPlayers","setTopPlayers","_useState3","_useState4","isLoading","setIsLoading","useEffect","LocalStorageService","getTopPlayers","useCallback","dotaApiResponse","topPlayerResponse","filteredPlayers","DotaService","elt","account_id","personaName","personaname","playerTileStyle","css","padding","display","justifyContent","alignItems","borderStyle","borderColor","margin","fontSize","maxWidth","PlayerTile","className","onClick","choosePlayerStyle","choosePlayerHeadingStyle","ChoosePlayers","filterValue","setFilterValue","_React$useState3","_React$useState4","isMenuOpen","setIsMenuOpen","toLowerCase","includes","slice","onChange","target","components_PlayerTile","matchTileStyle","marginLeft","MatchTile","matchDate","Date","toLocaleDateString","style","href","useFetchRecentGames","isError","setIsError","_React$useState5","_React$useState6","matchData","setMatchData","getMatchData","playerId","errorMessage","playerHeaderStyle","PlayerWithGames","isOpen","setIsOpen","_useFetchRecentGames","i","components_MatchTile","viewPlayerStyle","viewPlayersHeadingStyle","ViewPlayers","isPlayerShowing","setIsPlayerShowing","components_PlayerWithGames","App","_usePlayersOrCache","_usePlayersOrCache2","react_default","createElement","components_ViewPlayers","components_ChoosePlayers","rootElement","document","getElementById","ReactDOM","render","context_PlayersContextProvider","src_App"],"mappings":"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","file":"static/js/main.af4eb261.chunk.js","sourcesContent":["const get = key => {\r\n  const localValue = localStorage.getItem(key);\r\n  try {\r\n    if (localValue) {\r\n      return {\r\n        success: true,\r\n        data: JSON.parse(localValue)\r\n      };\r\n    }\r\n  } catch (e) {\r\n    console.error(e.message);\r\n  }\r\n  return {\r\n    success: false\r\n  };\r\n};\r\n\r\nconst set = (key, val) => {\r\n  localStorage.setItem(key, JSON.stringify(val));\r\n};\r\n\r\nexport { get, set };\r\n","import * as React from 'react'\nimport * as LocalStorage from '../services/local-storage.service'\n\nconst PlayersContext = React.createContext({})\n\nconst PlayersContextProvider = ({children}) => {\n  const [players, setPlayers] = React.useState([])\n\n  const addPlayer = React.useCallback(\n    newPlayer => {\n      setPlayers([...players, newPlayer])\n    },\n    [players, setPlayers],\n  )\n\n  const removePlayer = React.useCallback(\n    id => {\n      setPlayers(players.filter(player => id !== player.id))\n    },\n    [players, setPlayers],\n  )\n\n  React.useEffect(() => {\n    const cachedPlayers = LocalStorage.get('userPlayerCache')\n    if (cachedPlayers.success) {\n      setPlayers(cachedPlayers.data)\n    }\n  }, [])\n\n  React.useEffect(() => {\n    if (players !== undefined) {\n      LocalStorage.set('userPlayerCache', players)\n    }\n  }, [players])\n\n  return (\n    <PlayersContext.Provider\n      value={{players, setPlayers, addPlayer, removePlayer}}>\n      {children}\n    </PlayersContext.Provider>\n  )\n}\n\nexport {PlayersContext}\n\nexport default PlayersContextProvider\n","const request = async url => {\r\n  try {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n    return { success: true, data: json };\r\n  } catch (e) {\r\n    return { success: false, error: e.message };\r\n  }\r\n};\r\n\r\nexport { request };\r\n","import {request} from './request.service'\r\nimport heroes from '../assets/filtered-heroes.json'\r\n\r\nconst dotaApiUrl = 'https://api.opendota.com/api'\r\n\r\nconst getAllProPlayers = async () => {\r\n  const response = await request(dotaApiUrl + '/proPlayers')\r\n  return response\r\n}\r\n\r\nconst getHeroFromId = id => {\r\n  return heroes.filter(hero => hero.id === id)[0].name\r\n}\r\n\r\nconst getPlayersRecentGames = async id => {\r\n  const requestUrl = dotaApiUrl + '/players/' + id + '/recentMatches'\r\n  const response = await request(requestUrl)\r\n  if (!response.success) {\r\n    return response\r\n  }\r\n  const filteredMatches = response.data.map(match => ({\r\n    id: match.match_id,\r\n    hero: getHeroFromId(match.hero_id),\r\n    hero_id: match.hero_id,\r\n    date: match.start_time,\r\n    kills: match.kills,\r\n    deaths: match.deaths,\r\n    assists: match.assists,\r\n    radiant_win: match.radiant_win,\r\n  }))\r\n  return {\r\n    success: true,\r\n    data: filteredMatches,\r\n  }\r\n}\r\n\r\nexport {getAllProPlayers, getPlayersRecentGames}\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport * as LocalStorageService from \"../services/local-storage.service\";\r\nimport * as DotaService from \"../services/dota-api.service\";\r\n\r\nconst usePlayersOrCache = () => {\r\n  const [topPlayers, setTopPlayers] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const localValue = LocalStorageService.get(\"topPlayersCache\");\r\n    if (localValue.success) {\r\n      setTopPlayers(localValue.data);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    getTopPlayers();\r\n  }, []);\r\n\r\n  const getTopPlayers = useCallback(async () => {\r\n    const dotaApiResponse = await DotaService.getAllProPlayers();\r\n    if (!dotaApiResponse.success) {\r\n      console.error(dotaApiResponse.error);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    const topPlayerResponse = dotaApiResponse.data;\r\n    const filteredPlayers = topPlayerResponse.map(elt => ({\r\n      id: elt.account_id,\r\n      name: elt.name,\r\n      personaName: elt.personaname\r\n    }));\r\n\r\n    setTopPlayers(filteredPlayers);\r\n    LocalStorageService.set(\"topPlayersCache\", filteredPlayers);\r\n    setIsLoading(false);\r\n  }, [setTopPlayers, setIsLoading]);\r\n\r\n  return [isLoading, topPlayers];\r\n};\r\n\r\nexport default usePlayersOrCache;\r\n","import * as React from \"react\";\nimport { css } from \"emotion\";\nimport { PlayersContext } from '../context/PlayersContextProvider'\n\n\nconst PlayerTile = ({ player }) => {\n  const {addPlayer} = React.useContext(PlayersContext)\n\n  return (\n    <div className={playerTileStyle}>\n      <p>{player.name}</p>\n\t\t\t<button onClick={() => addPlayer(player)}>Add</button>\n    </div>\n  );\n};\n\nconst playerTileStyle = css({\n  padding: 6,\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  borderStyle: \"solid\",\n  borderColor: \"white\",\n  margin: 3,\n  fontSize: 18,\n  maxWidth: 400\n});\n\nexport default PlayerTile;\n","import * as React from 'react'\nimport PlayerTile from './PlayerTile'\nimport { css } from \"emotion\";\n\nconst ChoosePlayers = ({topPlayers}) => {\n  const [filterValue, setFilterValue] = React.useState('')\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false)\n\n  const filteredPlayers = topPlayers\n    .filter(player =>\n      player.name.toLowerCase().includes(filterValue.toLowerCase()),\n    )\n    .slice(0, 100)\n  return (\n    <div className={choosePlayerStyle}>\n      <div className={choosePlayerHeadingStyle}>\n        <h3>Choose Players</h3>\n\t\t\t\t<button onClick={() => setIsMenuOpen(val => !val)}>{isMenuOpen ? 'Close' : 'Open'}</button>\n      </div>\n      <p>Select players to add to your quick reference.</p>\n      {isMenuOpen && (\n        <>\n          <p>\n            This list only displays 100 players. Use the filter function to find\n            the player you are looking for.\n          </p>\n          <label>Filter players</label>\n          <input\n            value={filterValue}\n            onChange={e => setFilterValue(e.target.value)}\n          />\n          <div>\n            {filteredPlayers.map(player => (\n              <div key={`player-${player.id}`}>\n                <PlayerTile player={player} />\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nconst choosePlayerStyle = css({\n\t\t\t\tmaxWidth:600\n})\nconst choosePlayerHeadingStyle = css({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n})\n\nexport default ChoosePlayers\n","import * as React from 'react'\nimport {css} from 'emotion'\n\nconst MatchTile = ({match}) => {\n  const matchDate = new Date(match.date).toLocaleDateString('en-US')\n  return (\n    <div className={matchTileStyle}>\n      <div>\n        <h3 style={{margin: '1px'}}>{match.hero}</h3>\n        <div>{matchDate}</div>\n      </div>\n      <div>\n        <div>\n          <span>Match ID: </span>\n          <a\n            href={'https://www.dotabuff.com/matches/' + match.id}\n            target=\"_blank\">\n            {match.id}\n          </a>\n        </div>\n        <div>\n          KDA: {match.kills}/{match.deaths}/{match.assists}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst matchTileStyle = css({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  borderStyle: 'solid',\n  borderColor: 'white',\n  padding: 3,\n  marginLeft: 40,\n})\n\nexport default MatchTile\n","import * as React from 'react'\nimport * as DotaService from '../services/dota-api.service'\n\nconst useFetchRecentGames = id => {\n  const [isLoading, setIsLoading] = React.useState(true)\n  const [isError, setIsError] = React.useState(false)\n  const [matchData, setMatchData] = React.useState([])\n  const errorMessage = 'Could not fetch player match data.'\n  React.useEffect(() => {\n    getMatchData(id)\n  }, [])\n\n  const getMatchData = React.useCallback(\n    async playerId => {\n      const response = await DotaService.getPlayersRecentGames(playerId)\n      setIsLoading(false)\n      if (!response.success) {\n        setIsError(true)\n        return\n      }\n      setMatchData(response.data)\n    },\n    [setIsError, setMatchData, setIsLoading],\n  )\n  return {isLoading, matchData, isError, errorMessage}\n}\n\nexport default useFetchRecentGames\n","import * as React from 'react'\nimport {css} from 'emotion'\n\nimport MatchTile from './MatchTile'\nimport useFetchRecentGames from '../hooks/useFetchRecentGames'\nimport {PlayersContext} from '../context/PlayersContextProvider'\n\nconst PlayerWithGames = ({player}) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n  const {isLoading, matchData, isError, errorMessage} = useFetchRecentGames(\n    player.id,\n  )\n  const {removePlayer} = React.useContext(PlayersContext)\n  return (\n    <div>\n      <div className={playerHeaderStyle}>\n        <h3>{player.name}</h3>\n        <div>\n          {isLoading ? (\n            <p>Loading.....</p>\n          ) : (\n            <>\n              <button onClick={() => setIsOpen(val => !val)}>\n                {isOpen ? 'Hide' : 'Show'}\n              </button>\n              <button onClick={() => removePlayer(player.id)}>Remove</button>\n            </>\n          )}\n        </div>\n      </div>\n      {!isLoading &&\n        isOpen &&\n        matchData.map((match, i) => (\n          <MatchTile key={i + match.id} match={match} />\n        ))}\n    </div>\n  )\n}\n\nconst playerHeaderStyle = css({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  borderStyle: 'solid',\n  borderColor: 'white',\n  padding: 3,\n})\n\nexport default PlayerWithGames\n","import * as React from 'react'\nimport {css} from 'emotion'\n\nimport {PlayersContext} from '../context/PlayersContextProvider'\nimport PlayerWithGames from './PlayerWithGames'\n\nconst ViewPlayers = () => {\n  const {players} = React.useContext(PlayersContext)\n  const [isPlayerShowing, setIsPlayerShowing] = React.useState(true)\n  return (\n    <div className={viewPlayerStyle}>\n      <div className={viewPlayersHeadingStyle}>\n        <h2>Players</h2>\n        <button onClick={() => setIsPlayerShowing(val => !val)}>\n          {isPlayerShowing ? 'Collapse' : 'Open'}\n        </button>\n      </div>\n      <p>Players games, heroes, and WL</p>\n      <div style={!isPlayerShowing ? {display: 'none'} : {}}>\n         {players.map(player => (\n          <div key={player.id}>\n            <PlayerWithGames player={player} />\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\nconst viewPlayerStyle = css({\n  maxWidth: 600,\n})\n\nconst viewPlayersHeadingStyle = css({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n})\n\nexport default ViewPlayers\n","import React from 'react'\nimport usePlayersOrCache from './hooks/usePlayersOrCache'\nimport ChoosePlayers from './components/ChoosePlayers'\nimport ViewPlayers from './components/ViewPlayers'\n\nconst App = () => {\n  const [isLoading, topPlayers] = usePlayersOrCache()\n\n  return (\n    <div>\n      {isLoading && <h2>Loading...</h2>}\n      {!isLoading && (\n        <div>\n          <h2>Dota Quick Pro Reference</h2>\n          <ViewPlayers />\n          <ChoosePlayers topPlayers={topPlayers} />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport PlayersContextProvider from \"./context/PlayersContextProvider\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <PlayersContextProvider>\n    <App />\n  </PlayersContextProvider>,\n  rootElement\n);\n"],"sourceRoot":""}